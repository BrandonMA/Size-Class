{"version":3,"file":"index.js","sources":["../src/enums/HeightSize.ts","../src/enums/Size.ts","../src/enums/WidthSize.ts","../src/utilityFunctions/isDesktop.ts","../src/utilityFunctions/getStringNameFromDeviceTypeEnum.ts","../src/hooks/useHeightSizeClass.ts","../src/hooks/useWidthSizeClass.ts"],"sourcesContent":["export enum HeightSize {\n    compactPhone = 667, // iPhone 7 Height\n    largePhone = 812, // iPhone X Height\n    compactTablet = 768, // iPad Standard Height\n    largeTablet = 834, // iPad Pro 11 Height\n    extraLargeTablet = 1024, // iPad Pro 12.9 Height\n    compactDesktop = 597, // iPad Pro 11 2/4 (Chrome)\n    largeDesktop = 775, // Macbook Pro 13' 3/4 (Chrome)\n    extraLargeDesktop = 1050 // Macbook Pro 13' Max dynamic resolution\n}\n","export enum Size {\n    compact = 'compact',\n    medium = 'medium',\n    large = 'large',\n    extraLarge = 'extraLarge'\n}\n","export enum WidthSize {\n    compactPhone = 375, // iPhone 11 Pro\n    largePhone = 667, // iPhone 7 Landscape\n    compactTablet = 592, // iPad Pro 11 2/4\n    largeTablet = 768, // iPad normal Width\n    extraLargeTablet = 1366, // iPad Pro 12.9 full screen\n    compactDesktop = 592, // iPad Pro 11 2/4 (Chrome)\n    largeDesktop = 826, // Macbook Pro 13' 3/4 (Chrome)\n    extraLargeDesktop = 1680 // Macbook Pro 13' Max dynamic resolution\n}\n","import { osName } from 'expo-device';\nimport { Platform } from 'react-native';\n\nexport function isDesktop(): boolean {\n    return osName !== 'iOS' && osName !== 'Android' && (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos');\n}\n","import { DeviceType } from 'expo-device';\n\nexport function getStringNameFromDeviceTypeEnum(type: DeviceType): 'unknown' | 'phone' | 'tablet' | 'desktop' | 'tv' {\n    switch (type) {\n        case 1:\n            return 'phone';\n        case 2:\n            return 'tablet';\n        case 3:\n            return 'desktop';\n        case 4:\n            return 'tv';\n        default:\n            return 'unknown';\n    }\n}\n","import { useState, useLayoutEffect } from 'react';\nimport { useResponsiveHeight } from 'react-native-responsive-dimensions';\nimport { getDeviceTypeAsync, DeviceType } from 'expo-device';\nimport { Size } from '../enums/Size';\nimport { isDesktop } from '../utilityFunctions/isDesktop';\nimport { HeightSize } from '../enums/HeightSize';\n\nexport function useHeightSizeClass(): [Size, DeviceType] | null {\n    const [type, setType] = useState<DeviceType | null>(null);\n    const height = useResponsiveHeight(100);\n\n    useLayoutEffect(() => {\n        getDeviceTypeAsync()\n            .then((type) => {\n                return setType(type);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    if (type != null) {\n        if (isDesktop()) {\n            if (height >= HeightSize.extraLargeDesktop) {\n                return [Size.extraLarge, type];\n            } else if (height >= HeightSize.largeDesktop) {\n                return [Size.large, type];\n            } else if (height >= HeightSize.compactDesktop) {\n                return [Size.medium, type];\n            } else {\n                return [Size.compact, type];\n            }\n        } else {\n            if (type === DeviceType.TABLET) {\n                console.log(height);\n                if (height >= HeightSize.extraLargeTablet) {\n                    // Show a bigger iPad UI for the biggest one\n                    return [Size.extraLarge, type];\n                } else if (height >= HeightSize.largeTablet) {\n                    // Show the ideal iPad UI\n                    return [Size.large, type];\n                } else if (height >= HeightSize.compactTablet) {\n                    // Show a slightly reduced interface\n                    return [Size.medium, type];\n                } else {\n                    // Show a phone interface\n                    return [Size.compact, type];\n                }\n            } else {\n                if (height >= HeightSize.largePhone) {\n                    // Landscape, you can show more content\n                    return [Size.medium, type];\n                } else {\n                    // Normal phone interface\n                    return [Size.compact, type];\n                }\n            }\n        }\n    }\n    return null;\n}\n","import { useState, useLayoutEffect } from 'react';\nimport { useResponsiveWidth } from 'react-native-responsive-dimensions';\nimport { getDeviceTypeAsync, DeviceType } from 'expo-device';\nimport { WidthSize } from '../enums/WidthSize';\nimport { Size } from '../enums/Size';\nimport { isDesktop } from '../utilityFunctions/isDesktop';\n\nexport function useWidthSizeClass(): [Size, DeviceType] | null {\n    const [type, setType] = useState<DeviceType | null>(null);\n    const width = useResponsiveWidth(100);\n\n    useLayoutEffect(() => {\n        getDeviceTypeAsync()\n            .then((type) => {\n                return setType(type);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    if (type != null) {\n        if (isDesktop()) {\n            if (width >= WidthSize.extraLargeDesktop) {\n                return [Size.extraLarge, type];\n            } else if (width >= WidthSize.largeDesktop) {\n                return [Size.large, type];\n            } else if (width >= WidthSize.compactDesktop) {\n                return [Size.medium, type];\n            } else {\n                return [Size.compact, type];\n            }\n        } else {\n            if (type === DeviceType.TABLET) {\n                if (width >= WidthSize.extraLargeTablet) {\n                    // Show a bigger iPad UI for the biggest one\n                    return [Size.extraLarge, type];\n                } else if (width >= WidthSize.largeTablet) {\n                    // Show the ideal iPad UI\n                    return [Size.large, type];\n                } else if (width >= WidthSize.compactTablet) {\n                    // Show a slightly reduced interface\n                    return [Size.medium, type];\n                } else {\n                    // Show a phone interface\n                    return [Size.compact, type];\n                }\n            } else {\n                if (width >= WidthSize.largePhone) {\n                    // Landscape, you can show more content\n                    return [Size.medium, type];\n                } else {\n                    // Normal phone interface\n                    return [Size.compact, type];\n                }\n            }\n        }\n    }\n    return null;\n}\n"],"names":["HeightSize","Size","WidthSize","isDesktop","osName","Platform","OS","type","useState","setType","height","useResponsiveHeight","useLayoutEffect","getDeviceTypeAsync","then","error","console","log","extraLargeDesktop","extraLarge","largeDesktop","large","compactDesktop","medium","compact","DeviceType","TABLET","extraLargeTablet","largeTablet","compactTablet","largePhone","width","useResponsiveWidth"],"mappings":"IAAYA,ECAAC,ECAAC,iICGIC,IACZ,MAAkB,QAAXC,UAA+B,YAAXA,WAAyC,QAAhBC,WAASC,IAAgC,YAAhBD,WAASC,IAAoC,UAAhBD,WAASC,KHJ3GN,EAAAA,qBAAAA,2DAERA,iCACAA,uCACAA,mCACAA,8CACAA,yCACAA,qCACAA,iDCRQC,EAAAA,eAAAA,oCAERA,kBACAA,gBACAA,0BCJJ,SAAYC,GACRA,qCACAA,iCACAA,uCACAA,mCACAA,8CACAA,yCACAA,qCACAA,gDARJ,CAAYA,IAAAA,wDEEoCK,GAC5C,OAAQA,GACJ,OACI,MAAO,QACX,OACI,MAAO,SACX,OACI,MAAO,UACX,OACI,MAAO,KACX,QACI,MAAO,4ECLSC,WAA4B,MAA7CD,OAAME,OACPC,EAASC,sBAAoB,KAYnC,OAVAC,kBAAgB,WACZC,uBACKC,KAAK,SAACP,GACH,OAAOE,EAAQF,WAEZ,SAACQ,GACJC,QAAQC,IAAIF,MAErB,IAES,MAARR,EACIJ,IACIO,GAAUV,mBAAWkB,kBACd,CAACjB,aAAKkB,WAAYZ,GAClBG,GAAUV,mBAAWoB,aACrB,CAACnB,aAAKoB,MAAOd,GACbG,GAAUV,mBAAWsB,eACrB,CAACrB,aAAKsB,OAAQhB,GAEd,CAACN,aAAKuB,QAASjB,GAGtBA,IAASkB,aAAWC,QACpBV,QAAQC,IAAIP,GACRA,GAAUV,mBAAW2B,iBAEd,CAAC1B,aAAKkB,WAAYZ,GAClBG,GAAUV,mBAAW4B,YAErB,CAAC3B,aAAKoB,MAAOd,GACbG,GAAUV,mBAAW6B,cAErB,CAAC5B,aAAKsB,OAAQhB,GAGd,CAACN,aAAKuB,QAASjB,IAGtBG,GAAUV,mBAAW8B,WAEd,CAAC7B,aAAKsB,OAAQhB,GAGd,CAACN,aAAKuB,QAASjB,oDC9CdC,WAA4B,MAA7CD,OAAME,OACPsB,EAAQC,qBAAmB,KAYjC,OAVApB,kBAAgB,WACZC,uBACKC,KAAK,SAACP,GACH,OAAOE,EAAQF,WAEZ,SAACQ,GACJC,QAAQC,IAAIF,MAErB,IAES,MAARR,EACIJ,IACI4B,GAAS7B,EAAUgB,kBACZ,CAACjB,aAAKkB,WAAYZ,GAClBwB,GAAS7B,EAAUkB,aACnB,CAACnB,aAAKoB,MAAOd,GACbwB,GAAS7B,EAAUoB,eACnB,CAACrB,aAAKsB,OAAQhB,GAEd,CAACN,aAAKuB,QAASjB,GAGtBA,IAASkB,aAAWC,OAChBK,GAAS7B,EAAUyB,iBAEZ,CAAC1B,aAAKkB,WAAYZ,GAClBwB,GAAS7B,EAAU0B,YAEnB,CAAC3B,aAAKoB,MAAOd,GACbwB,GAAS7B,EAAU2B,cAEnB,CAAC5B,aAAKsB,OAAQhB,GAGd,CAACN,aAAKuB,QAASjB,GAGtBwB,GAAS7B,EAAU4B,WAEZ,CAAC7B,aAAKsB,OAAQhB,GAGd,CAACN,aAAKuB,QAASjB"}